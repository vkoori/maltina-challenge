version: "3.8"

#################### maltina-common ####################
x-maltina-common:
    &maltina-common
    restart: unless-stopped
    tty: true
    environment:
        TZ: "Asia/Tehran"
    depends_on:
        - maltina-db
        - maltina-redis
    volumes:
        - maltina-vendor:/var/www/html/maltina-php/vendor
        - ./:/var/www/html/maltina-php
        - ./.docker/php/config/maltina.ini:/usr/local/etc/php/conf.d/maltina.ini
    networks:
        - maltina-net
        - mailhog-net

services:
    #################### maltina-nginx ####################
    maltina-nginx:
        image: nginx:stable-alpine3.17
        container_name: maltina-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - maltina-php
        environment:
            TZ: "Asia/Tehran"
        volumes:
            - ./:/var/www/html/maltina-php
            - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./.docker/nginx/mime.types:/etc/nginx/mime.types
            - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
            - ./.docker/nginx/logs:/var/log/nginx/
            - ./.docker/nginx/ssl:/etc/ssl
        networks:
            - external-net
            - maltina-net

    #################### maltina-php ####################
    maltina-php:
        <<: *maltina-common
        build:
            context: ./
            dockerfile: ./.docker/php/${DOCKERFILE:-Dockerfile}
            target: maltina-app
            args:
                WORKDIR: /var/www/html/maltina-php
        container_name: maltina-php
        command: sh -c 'if [ "${DOCKERFILE:-Dockerfile}" = "DockerfileDev" ]; then (php artisan migrate --force); fi && php-fpm'
        networks:
            - external-net
            - maltina-net
            - mailhog-net

    #################### maltina-queue ####################
    maltina-queue:
        <<: *maltina-common
        build:
            context: ./
            dockerfile: ./.docker/php/${DOCKERFILE:-Dockerfile}
            target: queue
            args:
                WORKDIR: /var/www/html/maltina-php
        container_name: maltina-queue

    #################### maltina-schedule ####################
    maltina-schedule:
        <<: *maltina-common
        build:
            context: ./
            dockerfile: ./.docker/php/${DOCKERFILE:-Dockerfile}
            target: scheduler
            args:
                WORKDIR: /var/www/html/maltina-php
        container_name: maltina-schedule

    #################### maltina-db ####################
    maltina-db:
        image: mariadb:10.11.2-jammy
        container_name: ${DB_HOST:-maltina-db}
        restart: unless-stopped
        tty: true
        expose:
            - ${DB_PORT:-3306}
        environment:
            TZ: "Asia/Tehran"
            MARIADB_DATABASE: ${DB_DATABASE:-maltina}
            MARIADB_ROOT_PASSWORD: ${DB_PASSWORD:-1234}
        command:
            [
                "mysqld",
                "--default-authentication-plugin=mysql_native_password",
                "--character-set-server=utf8mb4",
                "--collation-server=utf8mb4_unicode_ci"
            ]
        volumes:
            - ./.docker/mariadb/custom.cnf:/etc/mysql/conf.d/custom.cnf
            - maltina-db:/var/lib/mysql/
        networks:
            - maltina-net

    #################### maltina-redis ####################
    maltina-redis:
        image: redis:alpine3.18
        hostname: ${REDIS_HOST:-maltina_redis}
        container_name: maltina-redis
        restart: unless-stopped
        tty: true
        expose:
            - ${REDIS_PORT:-6379}
        environment:
            TZ: "Asia/Tehran"
        command:
            [
                "redis-server",
                "--bind",
                "0.0.0.0",
                "--appendonly",
                "yes"
            ]
        # command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD:-secure}"
        volumes:
            - maltina-redis:/data
        networks:
            - maltina-net

    #################### mailhog ####################
    mailhog:
        image: mailhog/mailhog:v1.0.1
        container_name: mailhog
        logging:
            driver: 'none' # disable saving logs
        ports:
            - 1025:1025 # smtp server
            - 8025:8025 # web ui
        networks:
            - external-net
            - mailhog-net

# Networks
networks:
    external-net:
        driver: bridge
    maltina-net:
        driver: bridge
        external: false
    mailhog-net:
        driver: bridge
        external: false

# Volumes
volumes:
    maltina-vendor:
        driver: local
    maltina-db:
        driver: local
    maltina-redis:
        driver: local
